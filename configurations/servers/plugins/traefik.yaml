services:
  traefik:
    image: 'traefik:v3.3.2'
    container_name: 'traefik'
    command:
      - '--log.level=INFO'
      - '--ping=true'
      - '--api.insecure=true'
      - '--metrics.prometheus.entryPoint=metrics'
      - '--metrics.prometheus=true'
      - '--metrics.prometheus.addEntryPointsLabels=true'
      - '--metrics.prometheus.addServicesLabels=true'
      - '--metrics.prometheus.addrouterslabels=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--providers.nomad=true'
      - '--providers.nomad.endpoint.address=http://10.1.0.11:4646'
      - '--providers.nomad.namespaces=monitoring-system,kestra-client-1,kestra-client-2,kestra-client-3'
      - '--providers.nomad.exposedByDefault=false'
      - '--entryPoints.web.address=:80'
      - '--entryPoints.metrics.address=:8082'
      - '--entryPoints.rds.address=:5432'
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik-dashboard.rule=Host(`traefik.docker.localhost`)'
      - 'traefik.http.routers.traefik-dashboard.entrypoints=web'
      - 'traefik.http.routers.traefik-dashboard.service=api@internal'
    ports:
      - '80:80/tcp'
      - '5432:5432/tcp'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    depends_on:
      europe-paris-nomad-server-1:
        condition: 'service_healthy'
      europe-paris-nomad-server-2:
        condition: 'service_healthy'
      europe-paris-nomad-server-3:
        condition: 'service_healthy'
    networks:
      ministack:
        ipv4_address: '10.1.0.2'
